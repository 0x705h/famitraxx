;
; File generated by cc65 v 2.14.0
;
	.fopt		compiler,"cc65 v 2.14.0"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_clear
	.import		_pal_fade
	.import		_pal_fade_to_bg
	.import		_pal_fade_to_spr
	.import		_ppu_off
	.import		_ppu_on_bg
	.import		_ppu_waitnmi
	.import		_music_play
	.import		_pad_trigger
	.import		_unrle_vram
	.export		_palTitleBG
	.export		_credits
	.export		_screen_bin
	.export		_i
	.export		_j
	.import		_music_title_data
	.export		_write_string
	.export		_fade_screen_in
	.export		_fade_screen_out
	.export		_screen
	.export		_main

.segment	"RODATA"

_palTitleBG:
	.byte	$0F
	.byte	$00
	.byte	$10
	.byte	$30
	.byte	$0F
	.byte	$01
	.byte	$21
	.byte	$31
	.byte	$0F
	.byte	$06
	.byte	$16
	.byte	$26
	.byte	$0F
	.byte	$09
	.byte	$19
	.byte	$29
_credits:
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$E2
	.byte	$8E
	.byte	$6B
	.byte	$88
	.byte	$86
	.byte	$88
	.byte	$8D
	.byte	$80
	.byte	$8B
	.byte	$00
	.byte	$7D
	.byte	$7B
	.byte	$00
	.byte	$6C
	.byte	$8F
	.byte	$84
	.byte	$82
	.byte	$6D
	.byte	$6B
	.byte	$6E
	.byte	$8C
	.byte	$00
	.byte	$86
	.byte	$80
	.byte	$8C
	.byte	$84
	.byte	$00
	.byte	$01
	.byte	$26
	.byte	$7E
	.byte	$7F
	.byte	$F2
	.byte	$F0
	.byte	$F1
	.byte	$F1
	.byte	$00
	.byte	$83
	.byte	$84
	.byte	$8D
	.byte	$88
	.byte	$6C
	.byte	$00
	.byte	$86
	.byte	$6B
	.byte	$80
	.byte	$82
	.byte	$87
	.byte	$84
	.byte	$6F
	.byte	$00
	.byte	$01
	.byte	$6B
	.byte	$8D
	.byte	$84
	.byte	$6C
	.byte	$00
	.byte	$82
	.byte	$8E
	.byte	$8D
	.byte	$6F
	.byte	$84
	.byte	$6B
	.byte	$6C
	.byte	$88
	.byte	$8E
	.byte	$8D
	.byte	$00
	.byte	$81
	.byte	$7C
	.byte	$00
	.byte	$01
	.byte	$2E
	.byte	$6C
	.byte	$87
	.byte	$88
	.byte	$6B
	.byte	$6E
	.byte	$00
	.byte	$01
	.byte	$7A
	.byte	$8D
	.byte	$84
	.byte	$6C
	.byte	$00
	.byte	$8C
	.byte	$6E
	.byte	$6C
	.byte	$88
	.byte	$82
	.byte	$00
	.byte	$81
	.byte	$7C
	.byte	$00
	.byte	$01
	.byte	$33
	.byte	$6B
	.byte	$88
	.byte	$82
	.byte	$87
	.byte	$80
	.byte	$6B
	.byte	$83
	.byte	$00
	.byte	$FC
	.byte	$8A
	.byte	$6E
	.byte	$8B
	.byte	$8E
	.byte	$6B
	.byte	$FD
	.byte	$00
	.byte	$80
	.byte	$6B
	.byte	$8C
	.byte	$88
	.byte	$89
	.byte	$8E
	.byte	$00
	.byte	$01
	.byte	$FE
	.byte	$00
	.byte	$01
	.byte	$07
	.byte	$FF
	.byte	$01
	.byte	$0F
	.byte	$F5
	.byte	$01
	.byte	$07
	.byte	$5F
	.byte	$01
	.byte	$07
	.byte	$FF
	.byte	$01
	.byte	$07
	.byte	$F5
	.byte	$01
	.byte	$07
	.byte	$FF
	.byte	$01
	.byte	$07
	.byte	$0F
	.byte	$01
	.byte	$07
	.byte	$01
	.byte	$00
_screen_bin:
	.byte	$20
	.byte	$20
	.byte	$82
	.byte	$B5
	.byte	$8C
	.byte	$6E
	.byte	$8D
	.byte	$6C
	.byte	$87
	.byte	$8A
	.byte	$6B
	.byte	$20
	.byte	$20
	.byte	$17
	.byte	$C5
	.byte	$20
	.byte	$20
	.byte	$23
	.byte	$80
	.byte	$8B
	.byte	$84
	.byte	$8A
	.byte	$87
	.byte	$88
	.byte	$8D
	.byte	$F0
	.byte	$7A
	.byte	$B0
	.byte	$20
	.byte	$20
	.byte	$1E
	.byte	$C0
	.byte	$20
	.byte	$20
	.byte	$FF
	.byte	$20
	.byte	$FF
	.byte	$20
	.byte	$CF
	.byte	$54
	.byte	$05
	.byte	$05
	.byte	$02
	.byte	$45
	.byte	$51
	.byte	$20
	.byte	$20
	.byte	$01
	.byte	$55
	.byte	$0A
	.byte	$55
	.byte	$50
	.byte	$10
	.byte	$04
	.byte	$55
	.byte	$20
	.byte	$55
	.byte	$20
	.byte	$20
	.byte	$04
	.byte	$55
	.byte	$20
	.byte	$55
	.byte	$11
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$15
	.byte	$20
	.byte	$05
	.byte	$55
	.byte	$50
	.byte	$40
	.byte	$50
	.byte	$14
	.byte	$20
	.byte	$20
	.byte	$02
	.byte	$04
	.byte	$45
	.byte	$45
	.byte	$01
	.byte	$11
	.byte	$20
	.byte	$20
	.byte	$05
	.byte	$45
	.byte	$55
	.byte	$51
	.byte	$40
	.byte	$50
	.byte	$20
	.byte	$20
	.byte	$04
	.byte	$05
	.byte	$05
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$20

.segment	"BSS"

_i:
	.res	1,$00
_j:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ write_string (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_write_string: near

.segment	"CODE"

	lda     #$20
	sta     $2006
	lda     #$41
	sta     $2006
	jmp     L0115
L0113:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$0A
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	sta     $2007
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$01
	bcc     L011D
	inx
L011D:	jsr     stax0sp
L0115:	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1),y
	bne     L0113
	lda     #$20
	sta     $2006
	lda     #$4F
	sta     $2006
	lda     #$32
	sta     $2007
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ fade_screen_in (__near__ const unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fade_screen_in: near

.segment	"CODE"

	lda     #$00
L0168:	sta     _i
	cmp     #$10
	bcs     L0129
	jsr     _ppu_waitnmi
	lda     _i
	and     #$03
	bne     L0167
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _pal_fade_to_bg
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _pal_fade_to_spr
L0167:	lda     _i
	clc
	adc     #$01
	jmp     L0168
L0129:	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ fade_screen_out (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fade_screen_out: near

.segment	"CODE"

	lda     #$00
L016B:	sta     _i
	cmp     #$10
	bcs     L013A
	jsr     _ppu_waitnmi
	lda     _i
	and     #$03
	bne     L016A
	jsr     _pal_fade
L016A:	lda     _i
	clc
	adc     #$01
	jmp     L016B
L013A:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ screen (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_screen: near

.segment	"CODE"

	jsr     _ppu_off
	jsr     _pal_clear
	lda     #<(_screen_bin)
	ldx     #>(_screen_bin)
	jsr     pushax
	ldx     #$20
	lda     #$00
	jsr     _unrle_vram
	jsr     _ppu_on_bg
	lda     #<(_palTitleBG)
	ldx     #>(_palTitleBG)
	jsr     pushax
	jsr     _fade_screen_in
	lda     #<(_music_title_data)
	ldx     #>(_music_title_data)
	jsr     _music_play
	lda     #$96
	sta     _j
L0153:	jsr     _ppu_waitnmi
	jsr     _pad_trigger
	sta     _i
	lda     _j
	beq     L0154
	lda     _i
	and     #$08
	beq     L0153
L0154:	jmp     _fade_screen_out

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _screen
L016D:	jmp     L016D

.endproc

